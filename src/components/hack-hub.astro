---
import { Icon } from "astro-icon/components";
import ContentSection from "~/components/content-section.astro";
import type { FeatureItem } from "~/types";
import { getCollection } from "astro:content";
import ShowcaseCard from "~/components/showcase-card.astro";

const featuredSites = await getCollection(
  "showcase",
  ({ data }) => "featured" in data,
);
const orderedSites = featuredSites.sort(
  (a, b) => a.data.featured! - b.data.featured!,
);
---

<ContentSection title="Hack Hub" id="hackhub" altBackground={true}>
  <Fragment slot="lead">
    We host <span class="text-primary">weekly</span> CTF challenges from 
    <span class="text-primary">4-6pm</span> at <span class="text-primary">102 4RPD</span>. With these weekly meetups, 
    <span class="text-primary">anyone</span> can attend them.
  </Fragment>
  <div id="default-carousel" class="relative w-full max-w-5xl h-full space-y-2" data-carousel="slide">
    <!-- Carousel wrapper -->
    <div class="relative h-56 overflow-hidden rounded-lg md:h-96">
      {orderedSites.map((site) => <ShowcaseCard site={site} />)}
    </div>
    <!-- Slider indicators -->
    <div class="absolute z-30 flex -translate-x-1/2 bottom-5 left-1/2 space-x-3 rtl:space-x-reverse">
        {
          orderedSites.map((site, index) => (
            <button
              type="button"
              class="w-3 h-3 rounded-full"
              aria-current={index === 0}
              aria-label={`Slide ${index + 1}`}
              data-carousel-slide-to={index}
            ></button>
          ))
        }
    </div>
    <!-- Slider controls -->
    <button type="button" class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
        <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
            <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
            </svg>
            <span class="sr-only">Previous</span>
        </span>
    </button>
    <button type="button" class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-next>
        <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
            <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
            </svg>
            <span class="sr-only">Next</span>
        </span>
    </button>
  </div>
  <div id="imageModal" class="fixed inset-0 z-[9999] bg-black bg-opacity-50 flex items-center justify-center hidden overflow-y-auto">
    <div class="relative max-w-[60vw] max-h-[60vh] flex items-center justify-center">
      <img 
        id="modalImage" 
        src="" 
        alt="Zoomed image" 
        class="max-h-full max-w-full object-contain rounded-xl"
      />
      <button 
        id="closeModal" 
        class="hidden"
      >
      </button>
    </div>
  </div>
  
</ContentSection>

<script>
  const modal = document.getElementById('imageModal');
  const modalImage = document.getElementById('modalImage');
  const closeButton = document.getElementById('closeModal');

  function openModal(imageSrc) {
    modal.classList.remove('hidden');
    modalImage.src = imageSrc;
  }

  function closeModal() {
    modal.classList.add('hidden');
  }

  document.querySelectorAll('.showcase-image').forEach(img => {
    img.addEventListener('click', () => openModal(img.src));
  });

  closeButton.addEventListener('click', closeModal);
  modal.addEventListener('click', (e) => {
    if (e.target === modal) closeModal();
  });
</script>
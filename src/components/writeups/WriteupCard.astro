---
const { writeup } = Astro.props;

const formattedDate = new Intl.DateTimeFormat("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
}).format(writeup.data.pubDate);

const tagsJSON = JSON.stringify(writeup.data.tags || []);
---

<a
  href={`/writeups/${writeup.slug}`}
  class="border-border bg-background-offset block overflow-hidden rounded-lg border transition-shadow hover:shadow-lg"
  data-writeup-card
  data-category={writeup.data.category || ""}
  data-ctf={writeup.data.ctf || ""}
  data-section={writeup.data.section || ""}
  data-tags={tagsJSON}
>
  {
    writeup.data.image ? (
      <img
        src={writeup.data.image}
        alt={writeup.data.title}
        class="h-48 w-full object-cover"
      />
    ) : (
      <div class="flex h-48 w-full items-center justify-center bg-gradient-to-r from-primary to-secondary p-4 text-center text-white">
        <span class="font-bold text-xl break-words">
          {`${writeup.data.title}${writeup.data.ctf ? " / " + writeup.data.ctf : ""}` || 
           writeup.data.ctf || 
           "CTF Writeup"}
        </span>
      </div>
    )
  }
  <!-- Section badge if available -->
  {
    writeup.data.section && (
      <div class="bg-primary/80 absolute right-3 top-3 rounded px-2 py-1 font-medium text-white text-xs">
        {writeup.data.section}
      </div>
    )
  }
  <div class="p-6">
    <div class="mb-2 flex gap-2">
      {
        writeup.data.ctf && (
          <span class="bg-primary/20 rounded px-2 py-1 text-primary text-xs">
            {writeup.data.ctf}
          </span>
        )
      }
      {
        writeup.data.category && (
          <span class="bg-secondary/20 rounded px-2 py-1 text-secondary text-xs">
            {writeup.data.category}
          </span>
        )
      }
    </div>
    <h2 class="text-text mb-2 font-bold text-xl">{writeup.data.title}</h2>
    <p class="text-text-offset mb-4 line-clamp-2">{writeup.data.description}</p>
    <!-- Tags display -->
    {
      writeup.data.tags && writeup.data.tags.length > 0 && (
        <div class="mb-3 flex flex-wrap gap-1">
          {writeup.data.tags.map((tag) => (
            <span class="bg-background-alt rounded-full px-2 py-0.5 text-primary text-xs">
              #{tag}
            </span>
          ))}
        </div>
      )
    }
    <div class="flex items-center">
      <time
        class="text-text-offset text-sm"
        datetime={writeup.data.pubDate.toISOString()}
      >
        {formattedDate}
      </time>
      {
        writeup.data.author && (
          <span class="text-text-offset ml-2 text-sm">
            â€¢ by <span class="text-primary">{writeup.data.author}</span>
          </span>
        )
      }
    </div>
  </div>
</a>
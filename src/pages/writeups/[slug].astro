---
import { getCollection } from 'astro:content';
import Header from "~/components/header.astro";
import Footer from "~/components/footer.astro";
import ContentSection from "~/components/content-section.astro";
import { Icon } from "astro-icon/components";

// Generate paths for all writeups
export async function getStaticPaths() {
  const writeupEntries = await getCollection('writeups');
  return writeupEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the entry for this page
const { entry } = Astro.props;
const { Content } = await entry.render();

// Format date
const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
}).format(entry.data.pubDate);
---

<!doctype html>
<html lang="en" class="h-full motion-safe:scroll-smooth" data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <meta content="#ec4899" data-react-helmet="true" name="theme-color" />
    <meta name="generator" content={Astro.generator} />
    <title>{entry.data.title} | MQCyberSec</title>
    <meta name="description" content={entry.data.description} />
    
    <!-- social media -->
    <meta property="og:title" content={`${entry.data.title} | MQCyberSec`} />
    <meta property="og:type" content="article" />
    <meta property="og:description" content={entry.data.description} />
    
    <!-- initialize theme -->
    <script is:inline>
      const themeSaved = localStorage.getItem("theme");
      
      if (themeSaved) {
        document.documentElement.dataset.theme = themeSaved;
      } else {
        const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
        document.documentElement.dataset.theme = prefersDark ? "dark" : "light";
      }
    </script>
    
    <!-- Initialise Flowbite -->
    <script
      is:inline
      src="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.js"
    ></script>
  </head>
  
  <body class="h-full overflow-x-hidden bg-default text-default text-base selection:bg-secondary selection:text-white">
    <Header />
    
    <main>
      <article class="pt-24 pb-32">
        <div class="max-w-4xl mx-auto px-8">
          <div class="mb-8">
            <a href="/writeups" class="text-primary hover:text-primary/70 flex items-center gap-2">
              <Icon name="mdi:arrow-left" class="size-5" />
              Back to Writeups
            </a>
          </div>
          
          <header class="mb-8">
            <h1 class="text-4xl font-bold mb-4 text-text gradient-text">{entry.data.title}</h1>
            
            <div class="flex flex-wrap gap-4 mb-4">
              <time datetime={entry.data.pubDate.toISOString()} class="text-text-offset">
                {formattedDate}
              </time>
              
              {entry.data.author && (
                <div class="text-text-offset">
                  by <span class="text-primary">{entry.data.author}</span>
                </div>
              )}
            </div>
            
            <div class="flex flex-wrap gap-2">
              {entry.data.ctf && (
                <span class="px-3 py-1 bg-primary/20 text-primary text-sm rounded-full">
                  {entry.data.ctf}
                </span>
              )}
              
              {entry.data.category && (
                <span class="px-3 py-1 bg-secondary/20 text-secondary text-sm rounded-full">
                  {entry.data.category}
                </span>
              )}
            </div>
          </header>
          
          {entry.data.image && (
            <img 
              src={entry.data.image} 
              alt={entry.data.title}
              class="w-full h-64 object-cover rounded-lg mb-8"
            />
          )}
          
          <div class="prose prose-lg dark:prose-invert max-w-none">
            <Content />
          </div>
        </div>
      </article>
    </main>
    
    <Footer />
    
    <script>
      // Ensure the header always has the fixed-header class
      const header = document.getElementById('page-header');
      if (header) {
        header.classList.add('fixed-header');
      }
      
      // Flag detection script
      document.addEventListener('DOMContentLoaded', () => {
        // Find paragraphs containing the flag pattern
        const paragraphs = document.querySelectorAll('.prose p');
        
        paragraphs.forEach(paragraph => {
          if (paragraph.textContent.includes('Flag:')) {
            paragraph.classList.add('flag-paragraph');
            
            // Find the code element inside the flag paragraph
            const codeElement = paragraph.querySelector('code');
            if (codeElement) {
              codeElement.classList.add('flag-code');
            }
          }
        });
      });
    </script>
  </body>
</html>

<style is:global>
  /* Improved code block styling */
  .prose pre {
    color: var(--color-text);
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 1.25rem 0; /* Reduce vertical spacing */
  }
  
  /* Reduce bottom padding specifically to fix code block closing tag spacing */
  .prose pre code {
    padding-bottom: 0.1rem;
  }
  
  /* Inline code styling */
  .prose code:not(pre code) {
    background-color: var(--color-background-alt);
    color: var(--color-primary);
    padding: 0.2rem 0.4rem;
    border-radius: 0.25rem;
    font-size: 0.9em;
    font-weight: 500;
  }
  
  /* Ensure paragraphs have proper spacing */
  .prose p {
    margin-bottom: 1.25rem;
    line-height: 1.6;
  }
  
  /* When there are consecutive paragraphs, ensure they have spacing */
  .prose p + p {
    margin-top: 1rem;
  }
  
  /* Fix blank lines in content */
  .prose br {
    display: block;
    content: "";
    margin-top: 1rem;
  }
  
  /* Improved header styling */
  .prose h1 {
    font-size: 2.25rem;
    margin-top: 2.5rem;
    margin-bottom: 1.5rem;
    font-weight: 700;
    color: var(--color-text);
    border-bottom: 2px solid var(--color-primary);
    padding-bottom: 0.5rem;
  }
  
  .prose h2 {
    font-size: 1.8rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-weight: 600;
    color: var(--color-text);
    border-bottom: 1px solid var(--color-border);
    padding-bottom: 0.5rem;
  }
  
  .prose h3 {
    font-size: 1.5rem;
    margin-top: 1.75rem;
    margin-bottom: 0.75rem;
    font-weight: 600;
    color: var(--color-text);
  }
  
  .prose h4 {
    font-size: 1.25rem;
    margin-top: 1.5rem;
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: var(--color-text);
  }
  
  /* Ensure blockquotes are styled properly */
  .prose blockquote {
    border-left: 4px solid var(--color-primary);
    padding: 0.5rem 0 0.5rem 1rem;
    margin: 1.5rem 0;
    font-style: italic;
    color: var(--color-text-offset);
    background-color: var(--color-background-offset);
    border-radius: 0 0.25rem 0.25rem 0;
  }
  
  .prose blockquote p {
    margin-bottom: 0;
  }
  
  /* NEW STYLES */
  
  /* Improved link styling */
  .prose a {
    text-decoration: underline;
    text-decoration-color: var(--color-primary);
    text-decoration-thickness: 1px;
    text-underline-offset: 2px;
    transition: text-decoration-thickness 0.2s, text-underline-offset 0.2s;
  }

  .prose a:hover {
    text-decoration-thickness: 2px;
    text-underline-offset: 3px;
  }

  /* Special handling for blockquote links - make sure they're still visible */
  .prose blockquote a {
    color: var(--color-primary);
    text-decoration: underline;
    font-weight: 500;
  }

  /* Flag styling */
  .prose .flag-paragraph {
    position: relative;
    padding: 1rem 1.5rem;
    margin: 1.5rem 0;
    border-radius: 0.5rem;
    background-image: linear-gradient(to right, 
      var(--color-background-offset), 
      var(--color-background)
    );
    border-left: 4px solid var(--color-primary);
    font-weight: 500;
  }

  .prose .flag-code {
    background-color: var(--color-background-alt);
    color: var(--color-secondary);
    position: relative;
    font-weight: 700;
    padding: 0.3rem 0.6rem;
    border-radius: 0.25rem;
    box-shadow: 0 0 10px rgba(236, 72, 153, 0.2);
    animation: flag-glow 2s ease-in-out infinite alternate;
  }

  @keyframes flag-glow {
    from {
      box-shadow: 0 0 5px rgba(236, 72, 153, 0.2);
    }
    to {
      box-shadow: 0 0 15px rgba(236, 72, 153, 0.5);
    }
  }
  
  /* Keep the gradient text styling for the page title only */
  .gradient-text {
    @apply bg-clip-text text-transparent;
    @apply bg-gradient-to-br from-pink-500 via-purple-500 to-indigo-500;
  }
</style>